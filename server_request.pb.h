// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: server_request.proto

#ifndef PROTOBUF_server_5frequest_2eproto__INCLUDED
#define PROTOBUF_server_5frequest_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

namespace network {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_server_5frequest_2eproto();
void protobuf_AssignDesc_server_5frequest_2eproto();
void protobuf_ShutdownFile_server_5frequest_2eproto();

class ProtoRequestSimple;
class ProtoRequestExplorer;
class ProtoRequestVolume;
class ProtoRequestKeyboard;
class ProtoRequestAI;
class ProtoRequestApp;

enum ProtoRequestSimple_SimpleParam {
  ProtoRequestSimple_SimpleParam_HELLO = 0,
  ProtoRequestSimple_SimpleParam_TEST = 1,
  ProtoRequestSimple_SimpleParam_KILL_SERVER = 2,
  ProtoRequestSimple_SimpleParam_SHUTDOWN = 3,
  ProtoRequestSimple_SimpleParam_SWITCH_WINDOW = 4,
  ProtoRequestSimple_SimpleParam_LOCK = 5
};
bool ProtoRequestSimple_SimpleParam_IsValid(int value);
const ProtoRequestSimple_SimpleParam ProtoRequestSimple_SimpleParam_SimpleParam_MIN = ProtoRequestSimple_SimpleParam_HELLO;
const ProtoRequestSimple_SimpleParam ProtoRequestSimple_SimpleParam_SimpleParam_MAX = ProtoRequestSimple_SimpleParam_LOCK;
const int ProtoRequestSimple_SimpleParam_SimpleParam_ARRAYSIZE = ProtoRequestSimple_SimpleParam_SimpleParam_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProtoRequestSimple_SimpleParam_descriptor();
inline const ::std::string& ProtoRequestSimple_SimpleParam_Name(ProtoRequestSimple_SimpleParam value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProtoRequestSimple_SimpleParam_descriptor(), value);
}
inline bool ProtoRequestSimple_SimpleParam_Parse(
    const ::std::string& name, ProtoRequestSimple_SimpleParam* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProtoRequestSimple_SimpleParam>(
    ProtoRequestSimple_SimpleParam_descriptor(), name, value);
}
enum ProtoRequestExplorer_ExplorerParam {
  ProtoRequestExplorer_ExplorerParam_GET_FILE_LIST = 0,
  ProtoRequestExplorer_ExplorerParam_OPEN_DIR = 1,
  ProtoRequestExplorer_ExplorerParam_OPEN_FILE = 2
};
bool ProtoRequestExplorer_ExplorerParam_IsValid(int value);
const ProtoRequestExplorer_ExplorerParam ProtoRequestExplorer_ExplorerParam_ExplorerParam_MIN = ProtoRequestExplorer_ExplorerParam_GET_FILE_LIST;
const ProtoRequestExplorer_ExplorerParam ProtoRequestExplorer_ExplorerParam_ExplorerParam_MAX = ProtoRequestExplorer_ExplorerParam_OPEN_FILE;
const int ProtoRequestExplorer_ExplorerParam_ExplorerParam_ARRAYSIZE = ProtoRequestExplorer_ExplorerParam_ExplorerParam_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProtoRequestExplorer_ExplorerParam_descriptor();
inline const ::std::string& ProtoRequestExplorer_ExplorerParam_Name(ProtoRequestExplorer_ExplorerParam value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProtoRequestExplorer_ExplorerParam_descriptor(), value);
}
inline bool ProtoRequestExplorer_ExplorerParam_Parse(
    const ::std::string& name, ProtoRequestExplorer_ExplorerParam* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProtoRequestExplorer_ExplorerParam>(
    ProtoRequestExplorer_ExplorerParam_descriptor(), name, value);
}
enum ProtoRequestVolume_VolumeParam {
  ProtoRequestVolume_VolumeParam_UP = 0,
  ProtoRequestVolume_VolumeParam_DOWN = 1,
  ProtoRequestVolume_VolumeParam_MUTE = 2,
  ProtoRequestVolume_VolumeParam_DEFINE = 3
};
bool ProtoRequestVolume_VolumeParam_IsValid(int value);
const ProtoRequestVolume_VolumeParam ProtoRequestVolume_VolumeParam_VolumeParam_MIN = ProtoRequestVolume_VolumeParam_UP;
const ProtoRequestVolume_VolumeParam ProtoRequestVolume_VolumeParam_VolumeParam_MAX = ProtoRequestVolume_VolumeParam_DEFINE;
const int ProtoRequestVolume_VolumeParam_VolumeParam_ARRAYSIZE = ProtoRequestVolume_VolumeParam_VolumeParam_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProtoRequestVolume_VolumeParam_descriptor();
inline const ::std::string& ProtoRequestVolume_VolumeParam_Name(ProtoRequestVolume_VolumeParam value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProtoRequestVolume_VolumeParam_descriptor(), value);
}
inline bool ProtoRequestVolume_VolumeParam_Parse(
    const ::std::string& name, ProtoRequestVolume_VolumeParam* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProtoRequestVolume_VolumeParam>(
    ProtoRequestVolume_VolumeParam_descriptor(), name, value);
}
enum ProtoRequestKeyboard_KeyboardEvent {
  ProtoRequestKeyboard_KeyboardEvent_MEDIA_PLAY_PAUSE = 0,
  ProtoRequestKeyboard_KeyboardEvent_MEDIA_STOP = 1,
  ProtoRequestKeyboard_KeyboardEvent_MEDIA_PREVIOUS = 2,
  ProtoRequestKeyboard_KeyboardEvent_MEDIA_NEXT = 3,
  ProtoRequestKeyboard_KeyboardEvent_MEDIA_FF = 4,
  ProtoRequestKeyboard_KeyboardEvent_MEDIA_REWIND = 5,
  ProtoRequestKeyboard_KeyboardEvent_KB_RETURN = 6,
  ProtoRequestKeyboard_KeyboardEvent_KB_SPACE = 7,
  ProtoRequestKeyboard_KeyboardEvent_KB_BACKSPACE = 8,
  ProtoRequestKeyboard_KeyboardEvent_KB_ESCAPE = 9,
  ProtoRequestKeyboard_KeyboardEvent_DEFINE = 10,
  ProtoRequestKeyboard_KeyboardEvent_KB_ALT_F4 = 11,
  ProtoRequestKeyboard_KeyboardEvent_KB_CTRL_RETURN = 12
};
bool ProtoRequestKeyboard_KeyboardEvent_IsValid(int value);
const ProtoRequestKeyboard_KeyboardEvent ProtoRequestKeyboard_KeyboardEvent_KeyboardEvent_MIN = ProtoRequestKeyboard_KeyboardEvent_MEDIA_PLAY_PAUSE;
const ProtoRequestKeyboard_KeyboardEvent ProtoRequestKeyboard_KeyboardEvent_KeyboardEvent_MAX = ProtoRequestKeyboard_KeyboardEvent_KB_CTRL_RETURN;
const int ProtoRequestKeyboard_KeyboardEvent_KeyboardEvent_ARRAYSIZE = ProtoRequestKeyboard_KeyboardEvent_KeyboardEvent_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProtoRequestKeyboard_KeyboardEvent_descriptor();
inline const ::std::string& ProtoRequestKeyboard_KeyboardEvent_Name(ProtoRequestKeyboard_KeyboardEvent value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProtoRequestKeyboard_KeyboardEvent_descriptor(), value);
}
inline bool ProtoRequestKeyboard_KeyboardEvent_Parse(
    const ::std::string& name, ProtoRequestKeyboard_KeyboardEvent* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProtoRequestKeyboard_KeyboardEvent>(
    ProtoRequestKeyboard_KeyboardEvent_descriptor(), name, value);
}
enum ProtoRequestAI_AIParam {
  ProtoRequestAI_AIParam_MUTE = 0,
  ProtoRequestAI_AIParam_SAY = 1
};
bool ProtoRequestAI_AIParam_IsValid(int value);
const ProtoRequestAI_AIParam ProtoRequestAI_AIParam_AIParam_MIN = ProtoRequestAI_AIParam_MUTE;
const ProtoRequestAI_AIParam ProtoRequestAI_AIParam_AIParam_MAX = ProtoRequestAI_AIParam_SAY;
const int ProtoRequestAI_AIParam_AIParam_ARRAYSIZE = ProtoRequestAI_AIParam_AIParam_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProtoRequestAI_AIParam_descriptor();
inline const ::std::string& ProtoRequestAI_AIParam_Name(ProtoRequestAI_AIParam value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProtoRequestAI_AIParam_descriptor(), value);
}
inline bool ProtoRequestAI_AIParam_Parse(
    const ::std::string& name, ProtoRequestAI_AIParam* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProtoRequestAI_AIParam>(
    ProtoRequestAI_AIParam_descriptor(), name, value);
}
// ===================================================================

class ProtoRequestSimple : public ::google::protobuf::Message {
 public:
  ProtoRequestSimple();
  virtual ~ProtoRequestSimple();
  
  ProtoRequestSimple(const ProtoRequestSimple& from);
  
  inline ProtoRequestSimple& operator=(const ProtoRequestSimple& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoRequestSimple& default_instance();
  
  void Swap(ProtoRequestSimple* other);
  
  // implements Message ----------------------------------------------
  
  ProtoRequestSimple* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoRequestSimple& from);
  void MergeFrom(const ProtoRequestSimple& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef ProtoRequestSimple_SimpleParam SimpleParam;
  static const SimpleParam HELLO = ProtoRequestSimple_SimpleParam_HELLO;
  static const SimpleParam TEST = ProtoRequestSimple_SimpleParam_TEST;
  static const SimpleParam KILL_SERVER = ProtoRequestSimple_SimpleParam_KILL_SERVER;
  static const SimpleParam SHUTDOWN = ProtoRequestSimple_SimpleParam_SHUTDOWN;
  static const SimpleParam SWITCH_WINDOW = ProtoRequestSimple_SimpleParam_SWITCH_WINDOW;
  static const SimpleParam LOCK = ProtoRequestSimple_SimpleParam_LOCK;
  static inline bool SimpleParam_IsValid(int value) {
    return ProtoRequestSimple_SimpleParam_IsValid(value);
  }
  static const SimpleParam SimpleParam_MIN =
    ProtoRequestSimple_SimpleParam_SimpleParam_MIN;
  static const SimpleParam SimpleParam_MAX =
    ProtoRequestSimple_SimpleParam_SimpleParam_MAX;
  static const int SimpleParam_ARRAYSIZE =
    ProtoRequestSimple_SimpleParam_SimpleParam_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  SimpleParam_descriptor() {
    return ProtoRequestSimple_SimpleParam_descriptor();
  }
  static inline const ::std::string& SimpleParam_Name(SimpleParam value) {
    return ProtoRequestSimple_SimpleParam_Name(value);
  }
  static inline bool SimpleParam_Parse(const ::std::string& name,
      SimpleParam* value) {
    return ProtoRequestSimple_SimpleParam_Parse(name, value);
  }
  
  // accessors -------------------------------------------------------
  
  // required .network.ProtoRequestSimple.SimpleParam param = 1;
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 1;
  inline ::network::ProtoRequestSimple_SimpleParam param() const;
  inline void set_param(::network::ProtoRequestSimple_SimpleParam value);
  
  // @@protoc_insertion_point(class_scope:network.ProtoRequestSimple)
 private:
  inline void set_has_param();
  inline void clear_has_param();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  int param_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_server_5frequest_2eproto();
  friend void protobuf_AssignDesc_server_5frequest_2eproto();
  friend void protobuf_ShutdownFile_server_5frequest_2eproto();
  
  void InitAsDefaultInstance();
  static ProtoRequestSimple* default_instance_;
};
// -------------------------------------------------------------------

class ProtoRequestExplorer : public ::google::protobuf::Message {
 public:
  ProtoRequestExplorer();
  virtual ~ProtoRequestExplorer();
  
  ProtoRequestExplorer(const ProtoRequestExplorer& from);
  
  inline ProtoRequestExplorer& operator=(const ProtoRequestExplorer& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoRequestExplorer& default_instance();
  
  void Swap(ProtoRequestExplorer* other);
  
  // implements Message ----------------------------------------------
  
  ProtoRequestExplorer* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoRequestExplorer& from);
  void MergeFrom(const ProtoRequestExplorer& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef ProtoRequestExplorer_ExplorerParam ExplorerParam;
  static const ExplorerParam GET_FILE_LIST = ProtoRequestExplorer_ExplorerParam_GET_FILE_LIST;
  static const ExplorerParam OPEN_DIR = ProtoRequestExplorer_ExplorerParam_OPEN_DIR;
  static const ExplorerParam OPEN_FILE = ProtoRequestExplorer_ExplorerParam_OPEN_FILE;
  static inline bool ExplorerParam_IsValid(int value) {
    return ProtoRequestExplorer_ExplorerParam_IsValid(value);
  }
  static const ExplorerParam ExplorerParam_MIN =
    ProtoRequestExplorer_ExplorerParam_ExplorerParam_MIN;
  static const ExplorerParam ExplorerParam_MAX =
    ProtoRequestExplorer_ExplorerParam_ExplorerParam_MAX;
  static const int ExplorerParam_ARRAYSIZE =
    ProtoRequestExplorer_ExplorerParam_ExplorerParam_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ExplorerParam_descriptor() {
    return ProtoRequestExplorer_ExplorerParam_descriptor();
  }
  static inline const ::std::string& ExplorerParam_Name(ExplorerParam value) {
    return ProtoRequestExplorer_ExplorerParam_Name(value);
  }
  static inline bool ExplorerParam_Parse(const ::std::string& name,
      ExplorerParam* value) {
    return ProtoRequestExplorer_ExplorerParam_Parse(name, value);
  }
  
  // accessors -------------------------------------------------------
  
  // required .network.ProtoRequestExplorer.ExplorerParam param = 1;
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 1;
  inline ::network::ProtoRequestExplorer_ExplorerParam param() const;
  inline void set_param(::network::ProtoRequestExplorer_ExplorerParam value);
  
  // required string path = 2;
  inline bool has_path() const;
  inline void clear_path();
  static const int kPathFieldNumber = 2;
  inline const ::std::string& path() const;
  inline void set_path(const ::std::string& value);
  inline void set_path(const char* value);
  inline void set_path(const char* value, size_t size);
  inline ::std::string* mutable_path();
  inline ::std::string* release_path();
  
  // @@protoc_insertion_point(class_scope:network.ProtoRequestExplorer)
 private:
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_path();
  inline void clear_has_path();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* path_;
  int param_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_server_5frequest_2eproto();
  friend void protobuf_AssignDesc_server_5frequest_2eproto();
  friend void protobuf_ShutdownFile_server_5frequest_2eproto();
  
  void InitAsDefaultInstance();
  static ProtoRequestExplorer* default_instance_;
};
// -------------------------------------------------------------------

class ProtoRequestVolume : public ::google::protobuf::Message {
 public:
  ProtoRequestVolume();
  virtual ~ProtoRequestVolume();
  
  ProtoRequestVolume(const ProtoRequestVolume& from);
  
  inline ProtoRequestVolume& operator=(const ProtoRequestVolume& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoRequestVolume& default_instance();
  
  void Swap(ProtoRequestVolume* other);
  
  // implements Message ----------------------------------------------
  
  ProtoRequestVolume* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoRequestVolume& from);
  void MergeFrom(const ProtoRequestVolume& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef ProtoRequestVolume_VolumeParam VolumeParam;
  static const VolumeParam UP = ProtoRequestVolume_VolumeParam_UP;
  static const VolumeParam DOWN = ProtoRequestVolume_VolumeParam_DOWN;
  static const VolumeParam MUTE = ProtoRequestVolume_VolumeParam_MUTE;
  static const VolumeParam DEFINE = ProtoRequestVolume_VolumeParam_DEFINE;
  static inline bool VolumeParam_IsValid(int value) {
    return ProtoRequestVolume_VolumeParam_IsValid(value);
  }
  static const VolumeParam VolumeParam_MIN =
    ProtoRequestVolume_VolumeParam_VolumeParam_MIN;
  static const VolumeParam VolumeParam_MAX =
    ProtoRequestVolume_VolumeParam_VolumeParam_MAX;
  static const int VolumeParam_ARRAYSIZE =
    ProtoRequestVolume_VolumeParam_VolumeParam_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  VolumeParam_descriptor() {
    return ProtoRequestVolume_VolumeParam_descriptor();
  }
  static inline const ::std::string& VolumeParam_Name(VolumeParam value) {
    return ProtoRequestVolume_VolumeParam_Name(value);
  }
  static inline bool VolumeParam_Parse(const ::std::string& name,
      VolumeParam* value) {
    return ProtoRequestVolume_VolumeParam_Parse(name, value);
  }
  
  // accessors -------------------------------------------------------
  
  // required .network.ProtoRequestVolume.VolumeParam param = 1;
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 1;
  inline ::network::ProtoRequestVolume_VolumeParam param() const;
  inline void set_param(::network::ProtoRequestVolume_VolumeParam value);
  
  // optional int32 volume = 2 [default = 50];
  inline bool has_volume() const;
  inline void clear_volume();
  static const int kVolumeFieldNumber = 2;
  inline ::google::protobuf::int32 volume() const;
  inline void set_volume(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:network.ProtoRequestVolume)
 private:
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_volume();
  inline void clear_has_volume();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  int param_;
  ::google::protobuf::int32 volume_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_server_5frequest_2eproto();
  friend void protobuf_AssignDesc_server_5frequest_2eproto();
  friend void protobuf_ShutdownFile_server_5frequest_2eproto();
  
  void InitAsDefaultInstance();
  static ProtoRequestVolume* default_instance_;
};
// -------------------------------------------------------------------

class ProtoRequestKeyboard : public ::google::protobuf::Message {
 public:
  ProtoRequestKeyboard();
  virtual ~ProtoRequestKeyboard();
  
  ProtoRequestKeyboard(const ProtoRequestKeyboard& from);
  
  inline ProtoRequestKeyboard& operator=(const ProtoRequestKeyboard& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoRequestKeyboard& default_instance();
  
  void Swap(ProtoRequestKeyboard* other);
  
  // implements Message ----------------------------------------------
  
  ProtoRequestKeyboard* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoRequestKeyboard& from);
  void MergeFrom(const ProtoRequestKeyboard& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef ProtoRequestKeyboard_KeyboardEvent KeyboardEvent;
  static const KeyboardEvent MEDIA_PLAY_PAUSE = ProtoRequestKeyboard_KeyboardEvent_MEDIA_PLAY_PAUSE;
  static const KeyboardEvent MEDIA_STOP = ProtoRequestKeyboard_KeyboardEvent_MEDIA_STOP;
  static const KeyboardEvent MEDIA_PREVIOUS = ProtoRequestKeyboard_KeyboardEvent_MEDIA_PREVIOUS;
  static const KeyboardEvent MEDIA_NEXT = ProtoRequestKeyboard_KeyboardEvent_MEDIA_NEXT;
  static const KeyboardEvent MEDIA_FF = ProtoRequestKeyboard_KeyboardEvent_MEDIA_FF;
  static const KeyboardEvent MEDIA_REWIND = ProtoRequestKeyboard_KeyboardEvent_MEDIA_REWIND;
  static const KeyboardEvent KB_RETURN = ProtoRequestKeyboard_KeyboardEvent_KB_RETURN;
  static const KeyboardEvent KB_SPACE = ProtoRequestKeyboard_KeyboardEvent_KB_SPACE;
  static const KeyboardEvent KB_BACKSPACE = ProtoRequestKeyboard_KeyboardEvent_KB_BACKSPACE;
  static const KeyboardEvent KB_ESCAPE = ProtoRequestKeyboard_KeyboardEvent_KB_ESCAPE;
  static const KeyboardEvent DEFINE = ProtoRequestKeyboard_KeyboardEvent_DEFINE;
  static const KeyboardEvent KB_ALT_F4 = ProtoRequestKeyboard_KeyboardEvent_KB_ALT_F4;
  static const KeyboardEvent KB_CTRL_RETURN = ProtoRequestKeyboard_KeyboardEvent_KB_CTRL_RETURN;
  static inline bool KeyboardEvent_IsValid(int value) {
    return ProtoRequestKeyboard_KeyboardEvent_IsValid(value);
  }
  static const KeyboardEvent KeyboardEvent_MIN =
    ProtoRequestKeyboard_KeyboardEvent_KeyboardEvent_MIN;
  static const KeyboardEvent KeyboardEvent_MAX =
    ProtoRequestKeyboard_KeyboardEvent_KeyboardEvent_MAX;
  static const int KeyboardEvent_ARRAYSIZE =
    ProtoRequestKeyboard_KeyboardEvent_KeyboardEvent_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  KeyboardEvent_descriptor() {
    return ProtoRequestKeyboard_KeyboardEvent_descriptor();
  }
  static inline const ::std::string& KeyboardEvent_Name(KeyboardEvent value) {
    return ProtoRequestKeyboard_KeyboardEvent_Name(value);
  }
  static inline bool KeyboardEvent_Parse(const ::std::string& name,
      KeyboardEvent* value) {
    return ProtoRequestKeyboard_KeyboardEvent_Parse(name, value);
  }
  
  // accessors -------------------------------------------------------
  
  // required .network.ProtoRequestKeyboard.KeyboardEvent event = 1;
  inline bool has_event() const;
  inline void clear_event();
  static const int kEventFieldNumber = 1;
  inline ::network::ProtoRequestKeyboard_KeyboardEvent event() const;
  inline void set_event(::network::ProtoRequestKeyboard_KeyboardEvent value);
  
  // optional string text = 2;
  inline bool has_text() const;
  inline void clear_text();
  static const int kTextFieldNumber = 2;
  inline const ::std::string& text() const;
  inline void set_text(const ::std::string& value);
  inline void set_text(const char* value);
  inline void set_text(const char* value, size_t size);
  inline ::std::string* mutable_text();
  inline ::std::string* release_text();
  
  // @@protoc_insertion_point(class_scope:network.ProtoRequestKeyboard)
 private:
  inline void set_has_event();
  inline void clear_has_event();
  inline void set_has_text();
  inline void clear_has_text();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* text_;
  int event_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_server_5frequest_2eproto();
  friend void protobuf_AssignDesc_server_5frequest_2eproto();
  friend void protobuf_ShutdownFile_server_5frequest_2eproto();
  
  void InitAsDefaultInstance();
  static ProtoRequestKeyboard* default_instance_;
};
// -------------------------------------------------------------------

class ProtoRequestAI : public ::google::protobuf::Message {
 public:
  ProtoRequestAI();
  virtual ~ProtoRequestAI();
  
  ProtoRequestAI(const ProtoRequestAI& from);
  
  inline ProtoRequestAI& operator=(const ProtoRequestAI& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoRequestAI& default_instance();
  
  void Swap(ProtoRequestAI* other);
  
  // implements Message ----------------------------------------------
  
  ProtoRequestAI* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoRequestAI& from);
  void MergeFrom(const ProtoRequestAI& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef ProtoRequestAI_AIParam AIParam;
  static const AIParam MUTE = ProtoRequestAI_AIParam_MUTE;
  static const AIParam SAY = ProtoRequestAI_AIParam_SAY;
  static inline bool AIParam_IsValid(int value) {
    return ProtoRequestAI_AIParam_IsValid(value);
  }
  static const AIParam AIParam_MIN =
    ProtoRequestAI_AIParam_AIParam_MIN;
  static const AIParam AIParam_MAX =
    ProtoRequestAI_AIParam_AIParam_MAX;
  static const int AIParam_ARRAYSIZE =
    ProtoRequestAI_AIParam_AIParam_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  AIParam_descriptor() {
    return ProtoRequestAI_AIParam_descriptor();
  }
  static inline const ::std::string& AIParam_Name(AIParam value) {
    return ProtoRequestAI_AIParam_Name(value);
  }
  static inline bool AIParam_Parse(const ::std::string& name,
      AIParam* value) {
    return ProtoRequestAI_AIParam_Parse(name, value);
  }
  
  // accessors -------------------------------------------------------
  
  // required .network.ProtoRequestAI.AIParam param = 1;
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 1;
  inline ::network::ProtoRequestAI_AIParam param() const;
  inline void set_param(::network::ProtoRequestAI_AIParam value);
  
  // optional string text = 2;
  inline bool has_text() const;
  inline void clear_text();
  static const int kTextFieldNumber = 2;
  inline const ::std::string& text() const;
  inline void set_text(const ::std::string& value);
  inline void set_text(const char* value);
  inline void set_text(const char* value, size_t size);
  inline ::std::string* mutable_text();
  inline ::std::string* release_text();
  
  // @@protoc_insertion_point(class_scope:network.ProtoRequestAI)
 private:
  inline void set_has_param();
  inline void clear_has_param();
  inline void set_has_text();
  inline void clear_has_text();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* text_;
  int param_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_server_5frequest_2eproto();
  friend void protobuf_AssignDesc_server_5frequest_2eproto();
  friend void protobuf_ShutdownFile_server_5frequest_2eproto();
  
  void InitAsDefaultInstance();
  static ProtoRequestAI* default_instance_;
};
// -------------------------------------------------------------------

class ProtoRequestApp : public ::google::protobuf::Message {
 public:
  ProtoRequestApp();
  virtual ~ProtoRequestApp();
  
  ProtoRequestApp(const ProtoRequestApp& from);
  
  inline ProtoRequestApp& operator=(const ProtoRequestApp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoRequestApp& default_instance();
  
  void Swap(ProtoRequestApp* other);
  
  // implements Message ----------------------------------------------
  
  ProtoRequestApp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProtoRequestApp& from);
  void MergeFrom(const ProtoRequestApp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:network.ProtoRequestApp)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_server_5frequest_2eproto();
  friend void protobuf_AssignDesc_server_5frequest_2eproto();
  friend void protobuf_ShutdownFile_server_5frequest_2eproto();
  
  void InitAsDefaultInstance();
  static ProtoRequestApp* default_instance_;
};
// ===================================================================


// ===================================================================

// ProtoRequestSimple

// required .network.ProtoRequestSimple.SimpleParam param = 1;
inline bool ProtoRequestSimple::has_param() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoRequestSimple::set_has_param() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoRequestSimple::clear_has_param() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoRequestSimple::clear_param() {
  param_ = 0;
  clear_has_param();
}
inline ::network::ProtoRequestSimple_SimpleParam ProtoRequestSimple::param() const {
  return static_cast< ::network::ProtoRequestSimple_SimpleParam >(param_);
}
inline void ProtoRequestSimple::set_param(::network::ProtoRequestSimple_SimpleParam value) {
  GOOGLE_DCHECK(::network::ProtoRequestSimple_SimpleParam_IsValid(value));
  set_has_param();
  param_ = value;
}

// -------------------------------------------------------------------

// ProtoRequestExplorer

// required .network.ProtoRequestExplorer.ExplorerParam param = 1;
inline bool ProtoRequestExplorer::has_param() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoRequestExplorer::set_has_param() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoRequestExplorer::clear_has_param() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoRequestExplorer::clear_param() {
  param_ = 0;
  clear_has_param();
}
inline ::network::ProtoRequestExplorer_ExplorerParam ProtoRequestExplorer::param() const {
  return static_cast< ::network::ProtoRequestExplorer_ExplorerParam >(param_);
}
inline void ProtoRequestExplorer::set_param(::network::ProtoRequestExplorer_ExplorerParam value) {
  GOOGLE_DCHECK(::network::ProtoRequestExplorer_ExplorerParam_IsValid(value));
  set_has_param();
  param_ = value;
}

// required string path = 2;
inline bool ProtoRequestExplorer::has_path() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProtoRequestExplorer::set_has_path() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProtoRequestExplorer::clear_has_path() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProtoRequestExplorer::clear_path() {
  if (path_ != &::google::protobuf::internal::kEmptyString) {
    path_->clear();
  }
  clear_has_path();
}
inline const ::std::string& ProtoRequestExplorer::path() const {
  return *path_;
}
inline void ProtoRequestExplorer::set_path(const ::std::string& value) {
  set_has_path();
  if (path_ == &::google::protobuf::internal::kEmptyString) {
    path_ = new ::std::string;
  }
  path_->assign(value);
}
inline void ProtoRequestExplorer::set_path(const char* value) {
  set_has_path();
  if (path_ == &::google::protobuf::internal::kEmptyString) {
    path_ = new ::std::string;
  }
  path_->assign(value);
}
inline void ProtoRequestExplorer::set_path(const char* value, size_t size) {
  set_has_path();
  if (path_ == &::google::protobuf::internal::kEmptyString) {
    path_ = new ::std::string;
  }
  path_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ProtoRequestExplorer::mutable_path() {
  set_has_path();
  if (path_ == &::google::protobuf::internal::kEmptyString) {
    path_ = new ::std::string;
  }
  return path_;
}
inline ::std::string* ProtoRequestExplorer::release_path() {
  clear_has_path();
  if (path_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = path_;
    path_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// ProtoRequestVolume

// required .network.ProtoRequestVolume.VolumeParam param = 1;
inline bool ProtoRequestVolume::has_param() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoRequestVolume::set_has_param() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoRequestVolume::clear_has_param() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoRequestVolume::clear_param() {
  param_ = 0;
  clear_has_param();
}
inline ::network::ProtoRequestVolume_VolumeParam ProtoRequestVolume::param() const {
  return static_cast< ::network::ProtoRequestVolume_VolumeParam >(param_);
}
inline void ProtoRequestVolume::set_param(::network::ProtoRequestVolume_VolumeParam value) {
  GOOGLE_DCHECK(::network::ProtoRequestVolume_VolumeParam_IsValid(value));
  set_has_param();
  param_ = value;
}

// optional int32 volume = 2 [default = 50];
inline bool ProtoRequestVolume::has_volume() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProtoRequestVolume::set_has_volume() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProtoRequestVolume::clear_has_volume() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProtoRequestVolume::clear_volume() {
  volume_ = 50;
  clear_has_volume();
}
inline ::google::protobuf::int32 ProtoRequestVolume::volume() const {
  return volume_;
}
inline void ProtoRequestVolume::set_volume(::google::protobuf::int32 value) {
  set_has_volume();
  volume_ = value;
}

// -------------------------------------------------------------------

// ProtoRequestKeyboard

// required .network.ProtoRequestKeyboard.KeyboardEvent event = 1;
inline bool ProtoRequestKeyboard::has_event() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoRequestKeyboard::set_has_event() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoRequestKeyboard::clear_has_event() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoRequestKeyboard::clear_event() {
  event_ = 0;
  clear_has_event();
}
inline ::network::ProtoRequestKeyboard_KeyboardEvent ProtoRequestKeyboard::event() const {
  return static_cast< ::network::ProtoRequestKeyboard_KeyboardEvent >(event_);
}
inline void ProtoRequestKeyboard::set_event(::network::ProtoRequestKeyboard_KeyboardEvent value) {
  GOOGLE_DCHECK(::network::ProtoRequestKeyboard_KeyboardEvent_IsValid(value));
  set_has_event();
  event_ = value;
}

// optional string text = 2;
inline bool ProtoRequestKeyboard::has_text() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProtoRequestKeyboard::set_has_text() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProtoRequestKeyboard::clear_has_text() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProtoRequestKeyboard::clear_text() {
  if (text_ != &::google::protobuf::internal::kEmptyString) {
    text_->clear();
  }
  clear_has_text();
}
inline const ::std::string& ProtoRequestKeyboard::text() const {
  return *text_;
}
inline void ProtoRequestKeyboard::set_text(const ::std::string& value) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  text_->assign(value);
}
inline void ProtoRequestKeyboard::set_text(const char* value) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  text_->assign(value);
}
inline void ProtoRequestKeyboard::set_text(const char* value, size_t size) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  text_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ProtoRequestKeyboard::mutable_text() {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  return text_;
}
inline ::std::string* ProtoRequestKeyboard::release_text() {
  clear_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = text_;
    text_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// ProtoRequestAI

// required .network.ProtoRequestAI.AIParam param = 1;
inline bool ProtoRequestAI::has_param() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtoRequestAI::set_has_param() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtoRequestAI::clear_has_param() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtoRequestAI::clear_param() {
  param_ = 0;
  clear_has_param();
}
inline ::network::ProtoRequestAI_AIParam ProtoRequestAI::param() const {
  return static_cast< ::network::ProtoRequestAI_AIParam >(param_);
}
inline void ProtoRequestAI::set_param(::network::ProtoRequestAI_AIParam value) {
  GOOGLE_DCHECK(::network::ProtoRequestAI_AIParam_IsValid(value));
  set_has_param();
  param_ = value;
}

// optional string text = 2;
inline bool ProtoRequestAI::has_text() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProtoRequestAI::set_has_text() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProtoRequestAI::clear_has_text() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProtoRequestAI::clear_text() {
  if (text_ != &::google::protobuf::internal::kEmptyString) {
    text_->clear();
  }
  clear_has_text();
}
inline const ::std::string& ProtoRequestAI::text() const {
  return *text_;
}
inline void ProtoRequestAI::set_text(const ::std::string& value) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  text_->assign(value);
}
inline void ProtoRequestAI::set_text(const char* value) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  text_->assign(value);
}
inline void ProtoRequestAI::set_text(const char* value, size_t size) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  text_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ProtoRequestAI::mutable_text() {
  set_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    text_ = new ::std::string;
  }
  return text_;
}
inline ::std::string* ProtoRequestAI::release_text() {
  clear_has_text();
  if (text_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = text_;
    text_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// ProtoRequestApp


// @@protoc_insertion_point(namespace_scope)

}  // namespace network

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::network::ProtoRequestSimple_SimpleParam>() {
  return ::network::ProtoRequestSimple_SimpleParam_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::network::ProtoRequestExplorer_ExplorerParam>() {
  return ::network::ProtoRequestExplorer_ExplorerParam_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::network::ProtoRequestVolume_VolumeParam>() {
  return ::network::ProtoRequestVolume_VolumeParam_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::network::ProtoRequestKeyboard_KeyboardEvent>() {
  return ::network::ProtoRequestKeyboard_KeyboardEvent_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::network::ProtoRequestAI_AIParam>() {
  return ::network::ProtoRequestAI_AIParam_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_server_5frequest_2eproto__INCLUDED
